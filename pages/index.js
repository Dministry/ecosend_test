import Head from 'next/head'
import Image from 'next/image'
import { v4 as uuidv4 } from 'uuid';
import { useState } from 'react';
import styles from '../styles/Home.module.css'
import { PhotoIcon, UserCircleIcon } from '@heroicons/react/24/solid'
import { Country, State, City } from 'country-state-city';
import FormView from "../components/FormView"

export default function Home() {
  const [name, setName] = useState('')
  const [countryCode, setCountryCode] = useState('');
  const [stateCode, setStateCode] = useState('');
  const [city, setCity] = useState('');
  const [description, setDescription] = useState('')
  const [address, setAddress] = useState('')
  const [zip, setZip] = useState('')
  const [formInfo, setFormInfo] = useState([[]])

  function onFormSubmit(e) {
    e.preventDefault()
    setFormInfo((previous => [...previous, {
      id: uuidv4(), name, countryCode, stateCode, city, description, address, zip
    }]))
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>EcoSend Test</title>
        <meta name="description" content="Generated by create next app" />

        <link rel="icon" href="/favicon.ico" />
        <script src="https://cdn.tailwindcss.com"></script>
      </Head>
      <main >
        <h1 className={styles.title}>
          Ecosend <a href="#">Test</a>
        </h1>
        <div className="mt-20 bg-blue-100/30 rounded-lg p-8 mb-10 grid grid-cols-2 gap-x-0 gap-y-8 sm:grid-cols-2">
          <div className="col-span-2">

            <form className="w-8/12 ml-9" onSubmit={onFormSubmit}>
              <div className="space-y-12">
                <div className="border-b border-gray-900/10 pb-12">
                  <h2 className="text-base font-semibold leading-7 text-gray-900">Personal Information</h2>
                  <p className="mt-1 text-sm leading-6 text-gray-600">A form field to receive user data</p>

                  <div className="mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
                    <div className="sm:col-span-full">
                      <label htmlFor="first-name" className="block text-sm font-medium leading-6 text-gray-900">
                        Name
                      </label>
                      <div className="mt-2">
                        <input
                          required
                          onChange={(e) => setName(e.target.value)}
                          type="text"
                          name="first-name"
                          id="first-name"
                          autoComplete="given-name"
                          className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                        />
                      </div>
                    </div>

                    <div className="sm:col-span-full">
                      <label htmlFor="description" className="block text-sm font-medium leading-6 text-gray-900">
                        Description
                      </label>
                      <div className="mt-2">
                        <input
                          onChange={(e) => setDescription(e.target.value)}
                          required
                          type="text"
                          height="1000px"
                          name="description"
                          id="description"
                          autoComplete="description"
                          className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                        />
                      </div>
                    </div>

                    <div className="col-span-full">
                      <label htmlFor="street-address" className="block text-sm font-medium leading-6 text-gray-900">
                        Street address
                      </label>
                      <div className="mt-2">
                        <input
                          onChange={(e) => setAddress(e.target.value)}
                          required
                          type="text"
                          name="street-address"
                          id="street-address"
                          autoComplete="street-address"
                          className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                        />
                      </div>
                    </div>

                    {/* Country */}
                    <div className="sm:col-span-6">
                      <label htmlFor="country" className="block text-sm font-medium leading-6 text-gray-900">
                        Country
                       </label>
                      <div className="mt-2">

                        <select
                          name="country"
                          id="country"
                          className="w-full rounded-md border-0 py-1.5 my-4 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                          onChange={(e) => setCountryCode(e.target.value)}
                          required
                        >
                          <option value=''>Country</option>
                          {
                            Country.getAllCountries().map(country => {
                              return <option key={country.isoCode} value={country.isoCode}>{country.name}</option>
                            })
                          }
                        </select>
                        <br />
                        <select
                          name='state'
                          id='state'
                          className='w-full rounded-md border-0 py-1.5 my-4 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6'
                          onChange={(e) => setStateCode(e.target.value)}
                          required
                        >
                          <option value=''>State</option>
                          {
                            State.getStatesOfCountry(countryCode).map(state => {
                              return <option key={state.isoCode} value={state.isoCode}>{state.name}</option>
                            })
                          }
                        </select>
                        <br />
                        <select
                          name='city'
                          id='city'
                          className='w-full rounded-md border-0 py-1.5 my-4 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6'
                          onChange={(e) => setCity(e.target.value)}
                          required
                        >
                          <option value=''>City</option>
                          {
                            City.getCitiesOfState(countryCode, stateCode).map(city => {
                              return <option key={city.latitude} value={city.name}>{city.name}</option>
                            })
                          }
                        </select>

                      </div>
                    </div>



                    <div className="sm:col-span-6 sm:col-start-1">
                      <label htmlFor="zip" className="block text-sm font-medium leading-6 text-gray-900">
                        Zip/postal code
                      </label>
                      <div className="mt-2">
                        <input
                          onChange={(e) => setZip(e.target.value)}
                          required
                          type="zip"
                          name="zip"
                          id="zip"
                          autoComplete="address-level2"
                          className="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                        />
                      </div>
                    </div>

                  </div>
                </div>

              </div>

              <div className="mt-6 flex items-center justify-end gap-x-6">
                <button type="button" className="text-sm font-semibold leading-6 text-gray-900">
                  Add Field +
              </button>
                <button
                  type="submit"
                  className="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                >
                  Save
                </button>
              </div>
            </form>
          </div>
          <div className="col-span-2">
            <FormView formData={formInfo} setFormInfo={setFormInfo} />
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
